{"version":3,"file":"static/js/230.625b391c.chunk.js","mappings":"gRAKaA,EAAY,SAACC,EAAIC,EAAKC,GAAM,gDAAK,WAAOC,EAAUC,GAAQ,8FAE5CC,IAAAA,IAAU,GAAD,OAAIC,EAAAA,EAAG,qBAAaN,IAAM,KAAD,WAAjDO,EAAI,EAAJA,KACRJ,EAAS,CACLK,KAAM,gBACNC,QAAS,CACLC,QAASH,EAAKI,IACdC,KAAML,EAAKK,KACXC,MAAON,EAAKM,MACZC,aAAcP,EAAKO,aACnBC,OAAQR,EAAKQ,OACbd,IAAAA,EACAC,OAAQA,KAUhBc,aAAaC,QAAQ,YAAaC,KAAKC,UAAUf,IAAWgB,KAAKC,YAAW,2CAC/E,qDAvBwC,EAuBxC,EAGYC,EAAa,SAACtB,GAAE,gDAAK,WAAOG,EAAUC,GAAQ,sEACvDD,EAAS,CAAEK,KAAM,mBAAoBC,QAAST,IAC9CgB,aAAaO,WAAW,aACxBP,aAAaO,WAAW,mBACxBP,aAAaO,WAAW,iBACxBP,aAAaO,WAAW,eAAc,2CACzC,qDAN4B,EAM5B,EAGYC,EAAsB,SAACjB,GAAI,gDAAK,WAAOJ,GAAQ,sEACxDA,EAAS,CAAEK,KAAM,wBAAyBC,QAASF,IACnDS,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUZ,IAAM,2CAChE,mDAHuC,EAGvC,EAEYkB,EAAoB,SAAClB,GAAI,gDAAK,WAAOJ,GAAQ,sEACtDA,EAAS,CAAEK,KAAM,sBAAuBC,QAASF,IACjDS,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUZ,IAAM,2CAC9D,mDAHqC,EAGrC,C,yRC5CYmB,G,SAAc,SAACC,GAAK,gDAAK,WAAOxB,EAAUyB,GAAQ,oFAWtD,OAXsD,SAEvDzB,EAAS,CAAEK,KAAM,yBAA0B,EAE1BoB,IAATC,EAAI,EAAJA,KAEFC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,UAAU,GAAD,OAAKH,EAAKI,SAE1B,SACsB5B,IAAAA,KAAW,GAAD,OAAIC,EAAAA,EAAG,YAAYqB,EAAOG,GAAQ,KAAD,WAA1DvB,EAAI,EAAJA,KACRJ,EAAS,CAAEK,KAAM,uBAAwBC,QAASF,IAAQ,kDAK1DJ,EAAS,CACLK,KAAM,oBACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAxBgC,EAwBhC,GAIYC,EAAkB,SAACpC,GAAE,gDAAK,WAAOG,EAAUyB,GAAQ,oFAYvD,OAZuD,SAExDzB,EAAS,CAAEK,KAAM,0BAA2B,EAE3BoB,IAATC,EAAI,EAAJA,KAGFC,EAAS,CACXC,QAAS,CAELC,UAAU,GAAD,OAAKH,EAAKI,SAE1B,SACsB5B,IAAAA,IAAU,GAAD,OAAIC,EAAAA,EAAG,mBAAWN,GAAM8B,GAAQ,KAAD,WAAvDvB,EAAI,EAAJA,KACRJ,EAAS,CAAEK,KAAM,wBAAyBC,QAASF,IAAQ,kDAI3DJ,EAAS,CACLK,KAAM,qBACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAxBiC,EAwBjC,EAEYE,EAAe,SAACC,GAAO,gDAAM,WAAOnC,EAAUyB,GAAQ,kFAW1D,GAX0D,SAE3DzB,EAAS,CAAEK,KAAM,sBAAuB,EAEvBoB,IAATC,EAAI,EAAJA,KAEFC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,UAAWH,EAAKI,MAAK,UAAMJ,EAAKI,OAAU,MAG9CJ,EAAKI,MAAM,CAAD,gCACa5B,IAAAA,IAAU,GAAD,OAAIC,EAAAA,EAAG,mBAAWgC,EAAO,YAAY,CAAC,EAAGR,GAAQ,KAAD,WAApE,EAAJvB,KACRJ,EAAS,CAAEK,KAAM,sBAAuB,0DAK5CL,EAAS,CACLK,KAAM,iBACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAzBmC,EAyBnC,EAEYI,EAAW,WAAH,gDAAS,WAAOpC,EAAUyB,GAAQ,oFAY9C,OAZ8C,SAE/CzB,EAAS,CAAEK,KAAM,sBACN,EAAM,EAEAoB,IAATC,EAAI,EAAJA,KAEFC,EAAS,CACXC,QAAS,CAELC,UAAWH,EAAKI,MAAK,UAAMJ,EAAKI,OAAU,KAEjD,SAEsB5B,IAAAA,KAAW,GAAD,OAAIC,EAAAA,EAAG,oBAAoB,CAAEkC,MAAOX,EAAKW,OAASV,GAAQ,KAAD,WAAlFvB,EAAI,EAAJA,KACRJ,EAAS,CAAEK,KAAM,mBAAoBC,QAASF,IAAQ,kDAItDJ,EAAS,CACLK,KAAM,gBACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAzBoB,EAyBpB,EAGYM,EAAa,WAAH,gDAAS,WAAOtC,EAAUyB,GAAQ,oFAYhD,OAZgD,SAEjDzB,EAAS,CAAEK,KAAM,wBACN,EAAM,EAEAoB,IAATC,EAAI,EAAJA,KAEFC,EAAS,CACXC,QAAS,CAELC,UAAWH,EAAKI,MAAK,UAAMJ,EAAKI,OAAU,KAEjD,SAEsB5B,IAAAA,IAAU,GAAD,OAAIC,EAAAA,EAAG,YAAYwB,GAAQ,KAAD,WAAlDvB,EAAI,EAAJA,KACRJ,EAAS,CAAEK,KAAM,qBAAsBC,QAASF,IAAQ,kDAIxDJ,EAAS,CACLK,KAAM,kBACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAzBsB,EAyBtB,EAEYO,EAAiB,SAAC1C,GAAE,gDAAK,WAAOG,EAAUyB,GAAQ,oFAYtD,OAZsD,SAEvDzB,EAAS,CAAEK,KAAM,2BACN,EAAM,EAEAoB,IAATC,EAAI,EAAJA,KAEFC,EAAS,CACXC,QAAS,CAELC,UAAWH,EAAKI,MAAK,UAAMJ,EAAKI,OAAU,KAEjD,SAEsB5B,IAAAA,IAAU,GAAD,OAAIC,EAAAA,EAAG,mBAAWN,EAAE,gBAAgB,CAAC,EAAG8B,GAAQ,KAAD,WAAvEvB,EAAI,EAAJA,KACRJ,EAAS,CAAEK,KAAM,wBAAyBC,QAASF,IAAQ,kDAI3DJ,EAAS,CACLK,KAAM,qBACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAzBgC,EAyBhC,EAGYQ,EAAuB,SAAC3C,GAAE,gDAAK,WAAOG,EAAUyB,GAAQ,kFAW5D,OAX4D,SAE7DzB,EAAS,CAAEK,KAAM,kCACN,EAAM,EAEAoB,IAATC,EAAI,EAAJA,KAEFC,EAAS,CACXC,QAAS,CACLC,UAAWH,EAAKI,MAAK,UAAMJ,EAAKI,OAAU,KAEjD,SAEsB5B,IAAAA,OAAa,GAAD,OAAIC,EAAAA,EAAG,mBAAWN,GAAM8B,GAAQ,KAAD,WAAtD,EAAJvB,KACRJ,EAAS,CAAEK,KAAM,iCAAkC,kDAInDL,EAAS,CACLK,KAAM,4BACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAxBsC,EAwBtC,EAGYS,EAAiB,SAAC5C,GAAE,gDAAK,WAAOG,EAAUyB,GAAQ,kFAWtD,OAXsD,SAEvDzB,EAAS,CAAEK,KAAM,4BACN,EAAM,EAEAoB,IAATC,EAAI,EAAJA,KAEFC,EAAS,CACXC,QAAS,CACLC,UAAWH,EAAKI,MAAK,UAAMJ,EAAKI,OAAU,KAEjD,SAEsB5B,IAAAA,OAAa,GAAD,OAAIC,EAAAA,EAAG,4BAAoBN,GAAM8B,GAAQ,KAAD,WAA/D,EAAJvB,KACRJ,EAAS,CAAEK,KAAM,2BAA4B,kDAI7CL,EAAS,CACLK,KAAM,sBACNC,QAAS,KAAMyB,UAAY,KAAMA,SAAS3B,KAAK4B,QAC3C,KAAMD,SAAS3B,KAAK4B,QAAU,KAAMA,UAC1C,0DAET,qDAxBgC,EAwBhC,C,iHC3JD,IAtDkB,WAChB,OACE,mBAAQU,UAAU,gCAA+B,UAC/C,gBAAKA,UAAU,yEAAwE,UACrF,iBAAKA,UAAU,0HAAwH,WACrI,UAAC,KAAI,CACHA,UAAU,oDACVC,GAAG,gBAAe,UACnB,mBAEC,SAAC,MAAe,CAACD,UAAU,OAAOE,MAAM,aAE1C,UAAC,KAAI,CACHF,UAAU,oDACVC,GAAG,gBAAe,UACnB,UAEC,SAAC,MAAe,CAACD,UAAU,OAAOE,MAAM,aAE1C,UAAC,KAAI,CACHF,UAAU,oDACVC,GAAG,kBAAiB,UACrB,YAEC,SAAC,MAAkB,CAACD,UAAU,OAAOE,MAAM,aAE7C,UAAC,KAAI,CACHF,UAAU,oDACVC,GAAG,eAAc,UAClB,SAEC,SAAC,KAAO,CAACD,UAAU,OAAOE,MAAM,aAGlC,UAAC,KAAI,CACHF,UAAU,oDACVC,GAAG,mBAAkB,UACtB,aAEC,SAAC,MAAY,CAACD,UAAU,OAAOE,MAAM,aAEvC,UAAC,KAAI,CACHF,UAAU,oDACVC,GAAG,iBAAgB,UACpB,WAEC,SAAC,MAAuB,CAACD,UAAU,OAAOE,MAAM,kBAM5D,C,qGCoGA,UA3JyB,SAAH,GAA4B,IAAtBC,EAAK,EAALA,MACpBV,GADkC,EAAPW,QACjBD,EAAME,OAAOlD,IACvBG,GAAWgD,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,YAAY,IACxDvB,GAAOwB,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMzB,IAAI,IACtCF,EAA0ByB,EAA1BzB,MAAO4B,EAAmBH,EAAnBG,QAASC,EAAUJ,EAAVI,MACxB,GAA6DH,EAAAA,EAAAA,KAC3D,SAACC,GAAK,OAAKA,EAAMG,cAAc,IADhBC,EAAc,EAAvBH,QAAgD,EAAvBI,QAI5BJ,IACH5B,EAAMiC,WAAajC,EAAMkC,WAAWC,QAClC,SAACC,EAAKC,GAAI,OAAKD,EAAMC,EAAKnD,MAAQmD,EAAK/D,GAAG,GAC1C,KAIJgE,EAAAA,EAAAA,YAAU,WACR9D,GAASiC,EAAAA,EAAAA,IAAgBE,IACzBnC,EAAS,CAAEK,KAAM,uBACnB,GAAG,CAACL,EAAUmC,IAOd,OACE,iCACE,SAAC,IAAS,IACTT,GAAQ0B,IAAW,uBAAG,eACtBC,IAAS,yBAAG,IAAEA,EAAM,QAErB,mBAAQ,aAAW,cAAcX,UAAU,aAAY,UACrD,gBAAKA,UAAU,oDAAmD,UAChE,iBAAKA,UAAU,yCAAwC,WACrD,eAAIA,UAAU,+CAA8C,SAAC,WAI7D,cAAGA,UAAU,iCAAgC,SAAEP,KAC/C,mBACA,mBACA,eAAIO,UAAU,gBAAe,SAAC,cAC9B,eAAIA,UAAU,SACbhB,EAAKjB,OACJ,eAAGiC,UAAU,gBAAe,UACzB,KACD,8BAAQ,WAASlB,GAASA,EAAME,KAAKjB,KAAK,WAG9C,eAAGiC,UAAU,gBAAe,UACzB,KACD,4BAAQ,YAAiB,KACzB,eAAGqB,KAAI,iBAAYvC,GAASA,EAAME,KAAKW,OAAQ,UAC5C,IACAb,GAASA,EAAME,KAAKW,MAAO,WAGhC,eAAGK,UAAU,gBAAe,UACzB,KACD,4BAAQ,WAAgB,KACxB,UAAC,KAAI,CAACC,GAAE,sBAAiBnB,GAASA,EAAME,KAAKlB,KAAM,UAChD,IACAgB,GAASA,EAAME,KAAKlB,IAAK,WAI9B,eAAGkC,UAAU,gBAAe,WAC1B,4BAAQ,eACPlB,GAASA,EAAMwC,gBAAgBC,QAAQ,IAAE,IACzCzC,GAASA,EAAMwC,gBAAgBE,KAAK,IAAE,IACtC1C,GAASA,EAAMwC,gBAAgBG,WAAW,IAAE,KAC5C3C,GAASA,EAAMwC,gBAAgBI,WAEjC5C,GAASA,EAAM6C,aACd,eAAG3B,UAAU,iBAAgB,UAAC,IAAElB,GAASA,EAAM8C,YAAY,QAE3D,cAAG5B,UAAU,eAAc,SAAC,uBAG9B,mBACA,eAAIA,UAAU,gBAAe,SAAC,oBAC9B,eAAIA,UAAU,UACd,eAAGA,UAAU,gBAAe,WAC1B,4BAAQ,eACPlB,GAASA,EAAM+C,iBAEjB/C,GAASA,EAAMgD,QACd,eAAG9B,UAAU,iBAAgB,UAAC,IAAElB,GAASA,EAAMiD,OAAO,QAEtD,cAAG/B,UAAU,eAAc,SAAC,oBAG9B,mBACA,eAAIA,UAAU,gBAAe,SAAC,iBAC9B,eAAIA,UAAU,SACblB,GAAqC,IAA5BA,EAAMkC,WAAWgB,QACzB,uBAAG,mBAEH,8BACGlD,GACCA,EAAMkC,WAAWiB,KAAI,SAACd,EAAMe,GAAK,OAC/B,eAAelC,UAAU,gBAAe,WACtC,8BACG,KACD,UAAC,KAAI,CAACC,GAAE,mBAAckB,EAAKtD,SAAU,UAClC,IACAsD,EAAKpD,KAAM,OACN,OAEToD,EAAK/D,IAAI,UAAQ+D,EAAKnD,MAAM,SAAO,IACnCmD,EAAK/D,IAAM+D,EAAKnD,QATXkE,EAUJ,OAKZ,mBACA,eAAIlC,UAAU,gBAAe,SAAC,iBAC9B,eAAIA,UAAU,UACd,eAAGA,UAAU,gBAAe,WAC1B,4BAAQ,cAAkB,OACrBlB,GAASA,EAAMiC,eAEtB,eAAGf,UAAU,gBAAe,WAC1B,4BAAQ,iBAAqB,OACxBlB,GAASA,EAAMqD,kBAEtB,eAAGnC,UAAU,gBAAe,WAC1B,4BAAQ,kBAAsB,OACzBlB,GAASA,EAAMsD,aAEtB,eAAGpC,UAAU,gBAAe,WAC1B,4BAAQ,cAAkB,OACrBlB,GAASA,EAAMuD,cAGrBrD,GAAQA,EAAKsD,UACZ,mBACEC,SAAUzD,GAASA,EAAM6C,cAAe,EACxC3B,UAAU,gHACVwC,QAxHS,WACrBlF,GAASuC,EAAAA,EAAAA,IAAeJ,IACxBnC,GAASiC,EAAAA,EAAAA,IAAgBE,GAC3B,EAqHsC,SAEvBoB,EAAiB,aAAe,8BAQjD,C","sources":["actions/cartAction.js","actions/orderAction.js","components/Admin/AdminNavs.jsx","screens/Admin/AdminOrderDetail.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API } from \"../config/API\";\r\n\r\n\r\n//  get state becouse we want to store in the local stroage\r\nexport const addToCart = (id, qty, userId) => async (dispatch, getstate) => {\r\n\r\n    const { data } = await axios.get(`${API}/products/${id}`);\r\n    dispatch({\r\n        type: 'cart_add_item',\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            images: data.images,\r\n            qty,\r\n            userId: userId\r\n        }\r\n    });\r\n\r\n    // getstate() ----> goes to combine reducer\r\n    // getstate().cart ---> in combine reducer have cart where cartItems present\r\n    // so its similiar to useSelector;\r\n    // & its give the JS object and localStorage always save the string;\r\n    // JSON.stringfy convert to string & JSON.parse convert back to object\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getstate().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeCart = (id) => async (dispatch, getstate) => {\r\n    dispatch({ type: 'cart_remove_item', payload: id });\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    localStorage.removeItem('phoneNumber')\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({ type: 'cart_shipping_address', payload: data });\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({ type: 'cart_payment_method', payload: data });\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { API } from \"../config/API\";\r\nimport { removeCart } from \"./cartAction\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_create_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"Application/json\",\r\n                authtoken: `${user.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`${API}/orders/`, order, config);\r\n        dispatch({ type: 'order_create_success', payload: data });\r\n\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_create_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_details_request' });\r\n\r\n        const { user } = getState();\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"Application/json\",\r\n                authtoken: `${user.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/orders/${id}`, config);\r\n        dispatch({ type: 'order_details_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_details_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const confirmOrder = (orderId,) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_pay_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        if (user.token) {\r\n            const { data } = await axios.put(`${API}/orders/${orderId}/confirm`, {}, config);\r\n            dispatch({ type: 'order_pay_success' });\r\n\r\n        }\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_pay_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const myOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'my_order_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`${API}/orders/myorders`, { email: user.email }, config);\r\n        dispatch({ type: 'my_order_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'my_order_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const OrdersList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_list_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`${API}/orders/`, config);\r\n        dispatch({ type: 'order_list_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_list_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const OrderDelivered = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_deliver_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`${API}/orders/${id}/deliver/pay`, {}, config);\r\n        dispatch({ type: 'order_deliver_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_deliver_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const OrderDeliveredDelete = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_deliver_delete_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`${API}/orders/${id}`, config);\r\n        dispatch({ type: 'order_deliver_delete_success' });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_deliver_delete_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const myOrdersDelete = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'myorder_delete_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`${API}/orders/myorders/${id}`, config);\r\n        dispatch({ type: 'myorder_delete_success' });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'myorder_delete_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// icons\r\nimport { MdOutlineCreate } from \"react-icons/md\";\r\nimport { BsCardChecklist } from \"react-icons/bs\";\r\nimport { FaUsers, FaUserSecret } from \"react-icons/fa\";\r\nimport { HiOutlineQueueList,  } from \"react-icons/hi2\";\r\nimport {HiOutlineDocumentReport} from 'react-icons/hi'\r\n\r\nconst AdminNavs = () => {\r\n  return (\r\n    <header className=\"text-gray-600 body-font py-10\">\r\n      <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\r\n        <nav className=\"md:mr-auto md:ml-4 md:py-1 md:pl-4 md:border-l md:border-gray-400\tflex flex-wrap items-center text-base justify-center\">\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/create\"\r\n          >\r\n            Create Products\r\n            <MdOutlineCreate className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/orders\"\r\n          >\r\n            Orders\r\n            <BsCardChecklist className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/products\"\r\n          >\r\n            Products\r\n            <HiOutlineQueueList className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/users\"\r\n          >\r\n            Users\r\n            <FaUsers className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/suppliers\"\r\n          >\r\n            Suppliers\r\n            <FaUserSecret className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/reports\"\r\n          >\r\n            Reports\r\n            <HiOutlineDocumentReport className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AdminNavs;\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AdminNavs from \"../../components/Admin/AdminNavs\";\r\nimport { getOrderDetails, OrderDelivered } from \"../../actions/orderAction\";\r\n\r\nconst AdmimOrderDetail = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const user = useSelector((state) => state.user);\r\n  const { order, loading, error } = orderDetails;\r\n  const { loading: loadingdeliver, success: successDeliver } = useSelector(\r\n    (state) => state.orderDelivered\r\n  );\r\n\r\n  if (!loading) {\r\n    order.itemsPrice = order.orderItems.reduce(\r\n      (acc, item) => acc + item.price * item.qty,\r\n      0\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(orderId));\r\n    dispatch({ type: \"order_deliver_reset\" });\r\n  }, [dispatch, orderId]);\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(OrderDelivered(orderId));\r\n    dispatch(getOrderDetails(orderId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminNavs />\r\n      {user && loading && <p>loading...</p>}\r\n      {error && <p> {error} </p>}\r\n\r\n      <header aria-label=\"Page Header\" className=\"bg-gray-50\">\r\n        <div className=\"mx-auto max-w-screen-xl px-4 py-8 sm:px-6 lg:px-8\">\r\n          <div className=\"mt-8 pb-10 bg-blue-700 p-20 rounded-md\">\r\n            <h1 className=\"text-2xl font-bold text-gray-200 sm:text-3xl\">\r\n              Order\r\n            </h1>\r\n\r\n            <p className=\"mt-1.5 text-sm text-yellow-400\">{orderId}</p>\r\n            <br />\r\n            <br />\r\n            <h2 className=\"text-gray-200\">Shipping</h2>\r\n            <hr className=\"py-1\" />\r\n            {user.name && (\r\n              <p className=\"text-gray-200\">\r\n                {\" \"}\r\n                <strong> Name : {order && order.user.name} </strong>\r\n              </p>\r\n            )}\r\n            <p className=\"text-gray-200\">\r\n              {\" \"}\r\n              <strong>Email :</strong>{\" \"}\r\n              <a href={`mailto:${order && order.user.email}`}>\r\n                {\" \"}\r\n                {order && order.user.email}{\" \"}\r\n              </a>\r\n            </p>\r\n            <p className=\"text-gray-200\">\r\n              {\" \"}\r\n              <strong>User :</strong>{\" \"}\r\n              <Link to={`/admin/user/${order && order.user._id}`}>\r\n                {\" \"}\r\n                {order && order.user._id}{\" \"}\r\n              </Link>\r\n            </p>\r\n\r\n            <p className=\"text-gray-200\">\r\n              <strong> Address :</strong>\r\n              {order && order.shippingAddress.address},{\" \"}\r\n              {order && order.shippingAddress.city},{\" \"}\r\n              {order && order.shippingAddress.postalCode},{\"  \"}\r\n              {order && order.shippingAddress.country}\r\n            </p>\r\n            {order && order.isDelivered ? (\r\n              <p className=\"text-green-500\"> {order && order.deliveredAt} </p>\r\n            ) : (\r\n              <p className=\"text-red-700\"> Not Deliver Yet </p>\r\n            )}\r\n\r\n            <br />\r\n            <h2 className=\"text-gray-200\">payment method</h2>\r\n            <hr className=\"py-1\" />\r\n            <p className=\"text-gray-200\">\r\n              <strong> method : </strong>\r\n              {order && order.paymentMethod}\r\n            </p>\r\n            {order && order.isPaid ? (\r\n              <p className=\"text-green-700\"> {order && order.paidAt} </p>\r\n            ) : (\r\n              <p className=\"text-red-700\"> Not Paid Yet </p>\r\n            )}\r\n\r\n            <br />\r\n            <h2 className=\"text-gray-200\">Order Items</h2>\r\n            <hr className=\"py-1\" />\r\n            {order && order.orderItems.length === 0 ? (\r\n              <p>Cart is empty</p>\r\n            ) : (\r\n              <>\r\n                {order &&\r\n                  order.orderItems.map((item, index) => (\r\n                    <p key={index} className=\"text-gray-200\">\r\n                      <strong>\r\n                        {\" \"}\r\n                        <Link to={`/product/${item.product}`}>\r\n                          {\" \"}\r\n                          {item.name}{\" \"}\r\n                        </Link>{\" \"}\r\n                      </strong>\r\n                      {item.qty} x PKR {item.price} = PKR{\" \"}\r\n                      {item.qty * item.price}\r\n                    </p>\r\n                  ))}\r\n              </>\r\n            )}\r\n\r\n            <br />\r\n            <h2 className=\"text-gray-200\">Order Items</h2>\r\n            <hr className=\"py-1\" />\r\n            <p className=\"text-gray-200\">\r\n              <strong> Items : </strong>\r\n              PKR {order && order.itemsPrice}\r\n            </p>\r\n            <p className=\"text-gray-200\">\r\n              <strong> Shipping : </strong>\r\n              PKR {order && order.shippingPrice}\r\n            </p>\r\n            <p className=\"text-gray-200\">\r\n              <strong> TAX Price : </strong>\r\n              PKR {order && order.taxPrice}\r\n            </p>\r\n            <p className=\"text-gray-200\">\r\n              <strong> Total : </strong>\r\n              PKR {order && order.totalPrice}\r\n            </p>\r\n\r\n            {user && user.isAdmin && (\r\n              <button\r\n                disabled={order && order.isDelivered && true}\r\n                className=\"flex mx-auto text-white   bg-gray-500 border-0 py-2 px-8 focus:outline-none hover:bg-gray-600 rounded text-lg\"\r\n                onClick={deliverHandler}\r\n              >\r\n                {loadingdeliver ? \"loading...\" : \"delivered & Paid\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdmimOrderDetail;\r\n"],"names":["addToCart","id","qty","userId","dispatch","getstate","axios","API","data","type","payload","product","_id","name","price","countInStock","images","localStorage","setItem","JSON","stringify","cart","cartItems","removeCart","removeItem","saveShippingAddress","savePaymentMethod","createOrder","order","getState","user","config","headers","authtoken","token","response","message","getOrderDetails","confirmOrder","orderId","myOrders","email","OrdersList","OrderDelivered","OrderDeliveredDelete","myOrdersDelete","className","to","color","match","history","params","useDispatch","orderDetails","useSelector","state","loading","error","orderDelivered","loadingdeliver","success","itemsPrice","orderItems","reduce","acc","item","useEffect","href","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","length","map","index","shippingPrice","taxPrice","totalPrice","isAdmin","disabled","onClick"],"sourceRoot":""}