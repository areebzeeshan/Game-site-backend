{"version":3,"file":"static/js/472.340447bd.chunk.js","mappings":"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","sources":["actions/cartAction.js","actions/orderAction.js","screens/Order.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API } from \"../config/API\";\r\n\r\n\r\n//  get state becouse we want to store in the local stroage\r\nexport const addToCart = (id, qty, userId) => async (dispatch, getstate) => {\r\n\r\n    const { data } = await axios.get(`${API}/products/${id}`);\r\n    dispatch({\r\n        type: 'cart_add_item',\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            images: data.images,\r\n            qty,\r\n            userId: userId\r\n        }\r\n    });\r\n\r\n    // getstate() ----> goes to combine reducer\r\n    // getstate().cart ---> in combine reducer have cart where cartItems present\r\n    // so its similiar to useSelector;\r\n    // & its give the JS object and localStorage always save the string;\r\n    // JSON.stringfy convert to string & JSON.parse convert back to object\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getstate().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeCart = (id) => async (dispatch, getstate) => {\r\n    dispatch({ type: 'cart_remove_item', payload: id });\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    localStorage.removeItem('phoneNumber')\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({ type: 'cart_shipping_address', payload: data });\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({ type: 'cart_payment_method', payload: data });\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { API } from \"../config/API\";\r\nimport { removeCart } from \"./cartAction\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_create_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"Application/json\",\r\n                authtoken: `${user.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`${API}/orders/`, order, config);\r\n        dispatch({ type: 'order_create_success', payload: data });\r\n\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_create_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_details_request' });\r\n\r\n        const { user } = getState();\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"Application/json\",\r\n                authtoken: `${user.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/orders/${id}`, config);\r\n        dispatch({ type: 'order_details_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_details_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const confirmOrder = (orderId,) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_pay_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        if (user.token) {\r\n            const { data } = await axios.put(`${API}/orders/${orderId}/confirm`, {}, config);\r\n            dispatch({ type: 'order_pay_success' });\r\n\r\n        }\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_pay_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const myOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'my_order_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`${API}/orders/myorders`, { email: user.email }, config);\r\n        dispatch({ type: 'my_order_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'my_order_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const OrdersList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_list_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`${API}/orders/`, config);\r\n        dispatch({ type: 'order_list_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_list_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const OrderDelivered = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_deliver_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`${API}/orders/${id}/deliver/pay`, {}, config);\r\n        dispatch({ type: 'order_deliver_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_deliver_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const OrderDeliveredDelete = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_deliver_delete_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`${API}/orders/${id}`, config);\r\n        dispatch({ type: 'order_deliver_delete_success' });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_deliver_delete_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const myOrdersDelete = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'myorder_delete_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`${API}/orders/myorders/${id}`, config);\r\n        dispatch({ type: 'myorder_delete_success' });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'myorder_delete_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};","import axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { removeCart } from \"../actions/cartAction\";\r\nimport {\r\n  confirmOrder,\r\n  getOrderDetails,\r\n  OrderDelivered,\r\n} from \"../actions/orderAction\";\r\n\r\nconst Order = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [confirm, setConfirm] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const user = useSelector((state) => state.user);\r\n  const { order, loading, error, success } = orderDetails;\r\n\r\n  if (!loading && success) {\r\n    order.itemsPrice = order.orderItems.reduce(\r\n      (acc, item) => acc + item.price * item.qty,\r\n      0\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!order) {\r\n      dispatch(getOrderDetails(orderId));\r\n      dispatch({ type: \"order_pay_reset\" });\r\n    }\r\n  }, [dispatch, orderId]);\r\n\r\n  const ConfirmHandler = () => {\r\n    setConfirm(true);\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_BACKEND_API}/orders/send`,\r\n        {},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authToken: `${user.token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        dispatch(confirmOrder(orderId));\r\n        dispatch({ type: \"order_pay_reset\" });\r\n        history.push(\"/myorders\");\r\n        setConfirm(false);\r\n        dispatch({ type: \"cart_reset_item\" });\r\n      })\r\n      .catch((err) => {\r\n        setConfirm(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"text-gray-600 body-font\">\r\n      <div className=\"container px-5 py-24 mx-auto\">\r\n        <div className=\"flex flex-wrap -m-2\">\r\n          <div className=\"p-2 w-full\">\r\n            <div className=\"h-full flex items-center border-gray-200 border p-4 rounded-lg\">\r\n              <div className=\"flex-grow\">\r\n                <strong className=\"text-indigo-500\"> {order && order._id} </strong>\r\n                <h2 className=\"text-gray-900 title-font font-medium\">\r\n                  Shopping Info\r\n                </h2>\r\n                <p className=\"text-gray-500\">\r\n                  <strong> Name : {order && order.user.name} </strong>\r\n                </p>\r\n                <br />\r\n                <p className=\"text-gray-500\">\r\n                  <strong>Email :</strong>{\" \"}\r\n                  <a href={`mailto:${order && order.user.email}`}>\r\n                    {\" \"}\r\n                    {order && order.user.email}{\" \"}\r\n                  </a>\r\n                </p>\r\n                <br />\r\n                <p className=\"text-gray-500\">\r\n                  <strong> Address :</strong>\r\n                  {order && order.shippingAddress.address}, {order && order.shippingAddress.city},{\" \"}\r\n                  {order && order.shippingAddress.postalCode},{\"  \"}\r\n                  {order && order.shippingAddress.country}\r\n                </p>\r\n\r\n                <p className=\"text-gray-500\">\r\n                  <strong> Phone Number :</strong>\r\n                  {order && order.shippingAddress.phoneNumber}\r\n                </p>\r\n                {order && order.isDeliver ? (\r\n                  <p className=\"text-indigo-500\"> {order && order.deliverAt} </p>\r\n                ) : (\r\n                  <p className=\"text-red-500\">Not deliver yet </p>\r\n                )}\r\n                <br />\r\n                <hr />\r\n                <h2>payment method</h2>\r\n                <br />\r\n                <p className=\"text-gray-500\">\r\n                  <strong> method : </strong>\r\n                  {order && order.paymentMethod}\r\n                </p>\r\n                <br />\r\n                {order && order.isPaid ? (\r\n                  <p className=\"text-indigo-500\"> {order && order.paidAt} </p>\r\n                ) : (\r\n                  <p className=\"text-red-500\"> Not paid yet </p>\r\n                )}\r\n                <br />\r\n                <hr />\r\n                <h2>Order Items</h2>\r\n                <br />\r\n                {order && order.orderItems&& order.orderItems.length === 0 ? (\r\n                  <p>Cart is empty</p>\r\n                ) : (\r\n                  <>\r\n                    {order && order.orderItems&&order.orderItems.map((item, index) => (\r\n                      <p key=\"index\" className=\"text-gray-500\">\r\n                        <Link to={`/product/${item.product}`}>\r\n                          {\" \"}\r\n                          {item.name}{\" \"}\r\n                        </Link>\r\n                        <br />\r\n                        {item.qty} x PKR {item.price} = PKR{\" \"}\r\n                        {item.qty * item.price}\r\n                      </p>\r\n                    ))}\r\n                  </>\r\n                )}\r\n\r\n                <br />\r\n                <hr />\r\n                <h2> Order Summary </h2>\r\n                <p className=\"text-gray-500\">\r\n                  <strong> Price : </strong>\r\n                  {order &&order.itemsPrice} PKR\r\n                </p>\r\n                <br />\r\n\r\n                <p className=\"text-gray-500\">\r\n                  <strong> shipping : </strong>\r\n                  {order &&order.shippingPrice} PKR\r\n                </p>\r\n                <br />\r\n\r\n                <p className=\"text-gray-500\">\r\n                  <strong> Tax : </strong>\r\n                  {order &&order.taxPrice} PKR\r\n                </p>\r\n                <br />\r\n\r\n                <p className=\"text-gray-500\">\r\n                  <strong> Total : </strong>\r\n                  {order &&order.totalPrice} PKR\r\n                </p>\r\n                <br />\r\n                <hr />\r\n                {user && !user.isAdmin && (\r\n                  <button \r\n                  className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n                  onClick={ConfirmHandler}>\r\n                    {confirm ? \"loading...\" : \"Confrim Order\"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"],"names":["addToCart","id","qty","userId","dispatch","getstate","axios","API","data","type","payload","product","_id","name","price","countInStock","images","localStorage","setItem","JSON","stringify","cart","cartItems","removeCart","removeItem","saveShippingAddress","savePaymentMethod","createOrder","order","getState","user","config","headers","authtoken","token","response","message","getOrderDetails","confirmOrder","orderId","myOrders","email","OrdersList","OrderDelivered","OrderDeliveredDelete","myOrdersDelete","match","history","params","useDispatch","useState","confirm","setConfirm","orderDetails","useSelector","state","loading","success","error","itemsPrice","orderItems","reduce","acc","item","useEffect","className","href","shippingAddress","address","city","postalCode","country","phoneNumber","isDeliver","deliverAt","paymentMethod","isPaid","paidAt","length","map","index","to","shippingPrice","taxPrice","totalPrice","isAdmin","onClick","process","authToken","then","res","push","catch","err","console","log"],"sourceRoot":""}