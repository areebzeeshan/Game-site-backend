{"version":3,"file":"static/js/587.2e927c28.chunk.js","mappings":"kPA8IA,UApIyB,SAAH,GAAqB,IAAfA,EAAO,EAAPA,QACpBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,MACXC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,CAAK,IAArCC,MAERC,EAAAA,EAAAA,YAAU,WACRN,EAASO,OAAOC,aAAaC,QAAQ,yBACvC,GAAG,IAEH,IAAMC,EAAY,yCAAG,WAAOC,GAAC,8EAG3B,GAFAA,EAAEC,iBAGGb,GAAUE,EAAQ,gBACuB,OAA5CY,EAAAA,GAAAA,MAAY,gCAAgC,+BAG1CZ,EAASa,QAAU,GAAC,gBAC2B,OAAjDD,EAAAA,GAAAA,MAAY,qCAAqC,oDAK5BE,EAAAA,EAAAA,oBACnBhB,EACAQ,OAAOS,SAASC,MAChB,KAAD,GAHW,WAKDZ,KAAKa,cAAc,CAAD,gBAKA,OAH3BX,OAAOC,aAAaW,WAAW,yBAG3Bd,EAAOU,EAAAA,EAAAA,YAAiB,EAAD,QACrBV,EAAKe,eAAenB,GAAU,KAAD,oBACfI,EAAKgB,mBAAmB,KAAD,GAArCC,EAAK,QAIXC,EAAAA,EAAAA,IAAsBD,EAAMA,OACzBE,MAAK,SAACC,GACL7B,EAAS,CACP8B,KAAM,iBACNC,QAAS,CACP5B,MAAO0B,EAAIG,KAAK7B,MAChBuB,MAAOA,EAAMA,MACbO,KAAMJ,EAAIG,KAAKC,KACfC,IAAKL,EAAIG,KAAKE,IACdC,QAASN,EAAIG,KAAKG,UAGxB,IACCC,OAAM,SAACC,GAAG,OAAKC,QAAQC,MAAMF,EAAI,IAGpCtC,EAAQyC,KAAK,KAAK,0DAGpBF,QAAQC,MAAM,EAAD,IACbtB,EAAAA,GAAAA,MAAY,KAAMwB,SAAS,0DAE9B,gBApDiB,sCAsDlB,OACE,oBAASC,UAAU,mCAAkC,UACnD,iBAAKA,UAAU,+BAA8B,WAC3C,gBAAKA,UAAU,0CAAyC,UACtD,gBAAIC,MAAM,4FAA2F,UAAC,sBAClF,SAAC,MAAO,CAACD,UAAU,OAAOE,MAAM,SAAU,UAGhE,2BACE,gBAAKF,UAAU,4BAA2B,UACxC,iBAAKA,UAAU,sBAAqB,WAClC,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,WAAU,WACvB,kBACEG,IAAI,QACJH,UAAU,kCAAiC,SAC5C,WAGD,kBACEZ,KAAK,QACLgB,GAAG,QACHb,KAAK,QACLc,MAAO5C,EACP6C,SAAU,SAACjC,GAAC,OAAKX,EAASW,EAAEkC,OAAOF,MAAM,EACzCG,YAAY,aACZC,WAAS,EACTT,UAAU,wPAKhB,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,WAAU,WACvB,kBACEG,IAAI,WACJH,UAAU,kCAAiC,SAC5C,cAGD,kBACEZ,KAAK,WACLgB,GAAG,WACHb,KAAK,WACLc,MAAO1C,EACP2C,SAAU,SAACjC,GAAC,OAAKT,EAAYS,EAAEkC,OAAOF,MAAM,EAC5CG,YAAY,WACZR,UAAU,wPAKhB,gBAAKA,UAAU,cAAcU,QAAStC,EAAa,UACjD,mBACEuC,UAAWlD,EACXuC,UAAU,oHAAmH,SAC9H,mCAUjB,C","sources":["screens/Auth/RegisterComplete.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport create_or_update_user from \"../../oop/AuthFunc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// icons\r\nimport { TbLogin } from \"react-icons/tb\";\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { user } = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem(\"emailForRegisteration\"));\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // validation\r\n    if (!email || !password) {\r\n      toast.error(\"Email & Password is required\");\r\n      return;\r\n    }\r\n    if (password.length <= 4) {\r\n      toast.error(\"Password must be 4 charactor long\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(\r\n        email,\r\n        window.location.href\r\n      );\r\n\r\n      if (result.user.emailVerified) {\r\n        // remove email from local storage\r\n        window.localStorage.removeItem(\"emailForRegisteration\");\r\n\r\n        // get user token of current user , firebase gives\r\n        let user = auth.currentUser;\r\n        await user.updatePassword(password);\r\n        const token = await user.getIdTokenResult();\r\n\r\n        // redux store\r\n\r\n        create_or_update_user(token.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"logged_in_user\",\r\n              payload: {\r\n                email: res.data.email,\r\n                token: token.token,\r\n                name: res.data.name,\r\n                _id: res.data._id,\r\n                isAdmin: res.data.isAdmin,\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => console.error(err));\r\n\r\n        //  redirect\r\n        history.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"text-gray-600 body-font relative\">\r\n      <div className=\"container px-5 py-10 mx-auto\">\r\n        <div className=\"flex flex-col items-center w-full mb-12\">\r\n          <h1 class=\"sm:text-3xl text-2xl  inline-flex  items-center font-medium title-font mb-4 text-gray-700\">\r\n            Register Complete <TbLogin className=\"mx-1\" color=\"blue\" />{\" \"}\r\n          </h1>\r\n        </div>\r\n        <form>\r\n          <div className=\"lg:w-1/2 md:w-2/3 mx-auto\">\r\n            <div className=\"flex flex-wrap -m-2\">\r\n              <div className=\"p-2 w-full\">\r\n                <div className=\"relative\">\r\n                  <label\r\n                    for=\"email\"\r\n                    className=\"leading-7 text-sm text-gray-600\"\r\n                  >\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Your email\"\r\n                    autoFocus\r\n                    className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"p-2 w-full\">\r\n                <div className=\"relative\">\r\n                  <label\r\n                    for=\"password\"\r\n                    className=\"leading-7 text-sm text-gray-600\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\"\r\n                    className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\" p-2 w-full\" onClick={handleSubmit}>\r\n                <button\r\n                  disabled={!email}\r\n                  className=\"flex mx-auto text-white   bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg\"\r\n                >\r\n                  Register Complete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterComplete;\r\n"],"names":["history","dispatch","useDispatch","useState","email","setEmail","password","setPassword","useSelector","state","user","useEffect","window","localStorage","getItem","handleSubmit","e","preventDefault","toast","length","auth","location","href","emailVerified","removeItem","updatePassword","getIdTokenResult","token","create_or_update_user","then","res","type","payload","data","name","_id","isAdmin","catch","err","console","error","push","message","className","class","color","for","id","value","onChange","target","placeholder","autoFocus","onClick","disabled"],"sourceRoot":""}