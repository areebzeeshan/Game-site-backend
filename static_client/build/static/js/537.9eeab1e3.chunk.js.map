{"version":3,"file":"static/js/537.9eeab1e3.chunk.js","mappings":"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","sources":["actions/cartAction.js","actions/orderAction.js","components/Admin/AdminNavs.jsx","screens/Admin/AdminOrderList.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API } from \"../config/API\";\r\n\r\n\r\n//  get state becouse we want to store in the local stroage\r\nexport const addToCart = (id, qty, userId) => async (dispatch, getstate) => {\r\n\r\n    const { data } = await axios.get(`${API}/products/${id}`);\r\n    dispatch({\r\n        type: 'cart_add_item',\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            images: data.images,\r\n            qty,\r\n            userId: userId\r\n        }\r\n    });\r\n\r\n    // getstate() ----> goes to combine reducer\r\n    // getstate().cart ---> in combine reducer have cart where cartItems present\r\n    // so its similiar to useSelector;\r\n    // & its give the JS object and localStorage always save the string;\r\n    // JSON.stringfy convert to string & JSON.parse convert back to object\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getstate().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeCart = (id) => async (dispatch, getstate) => {\r\n    dispatch({ type: 'cart_remove_item', payload: id });\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    localStorage.removeItem('phoneNumber')\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({ type: 'cart_shipping_address', payload: data });\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({ type: 'cart_payment_method', payload: data });\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { API } from \"../config/API\";\r\nimport { removeCart } from \"./cartAction\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_create_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"Application/json\",\r\n                authtoken: `${user.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`${API}/orders/`, order, config);\r\n        dispatch({ type: 'order_create_success', payload: data });\r\n\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_create_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_details_request' });\r\n\r\n        const { user } = getState();\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"Application/json\",\r\n                authtoken: `${user.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/orders/${id}`, config);\r\n        dispatch({ type: 'order_details_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_details_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const confirmOrder = (orderId,) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_pay_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        if (user.token) {\r\n            const { data } = await axios.put(`${API}/orders/${orderId}/confirm`, {}, config);\r\n            dispatch({ type: 'order_pay_success' });\r\n\r\n        }\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_pay_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const myOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'my_order_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`${API}/orders/myorders`, { email: user.email }, config);\r\n        dispatch({ type: 'my_order_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'my_order_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const OrdersList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_list_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`${API}/orders/`, config);\r\n        dispatch({ type: 'order_list_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_list_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const OrderDelivered = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_deliver_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`${API}/orders/${id}/deliver/pay`, {}, config);\r\n        dispatch({ type: 'order_deliver_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_deliver_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const OrderDeliveredDelete = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'order_deliver_delete_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`${API}/orders/${id}`, config);\r\n        dispatch({ type: 'order_deliver_delete_success' });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'order_deliver_delete_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const myOrdersDelete = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'myorder_delete_request' });\r\n        let bool = false;\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`${API}/orders/myorders/${id}`, config);\r\n        dispatch({ type: 'myorder_delete_success' });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'myorder_delete_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// icons\r\nimport { MdOutlineCreate } from \"react-icons/md\";\r\nimport { BsCardChecklist } from \"react-icons/bs\";\r\nimport { FaUsers, FaUserSecret } from \"react-icons/fa\";\r\nimport { HiOutlineQueueList,  } from \"react-icons/hi2\";\r\nimport {HiOutlineDocumentReport} from 'react-icons/hi'\r\n\r\nconst AdminNavs = () => {\r\n  return (\r\n    <header className=\"text-gray-600 body-font py-10\">\r\n      <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\r\n        <nav className=\"md:mr-auto md:ml-4 md:py-1 md:pl-4 md:border-l md:border-gray-400\tflex flex-wrap items-center text-base justify-center\">\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/create\"\r\n          >\r\n            Create Products\r\n            <MdOutlineCreate className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/orders\"\r\n          >\r\n            Orders\r\n            <BsCardChecklist className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/products\"\r\n          >\r\n            Products\r\n            <HiOutlineQueueList className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/users\"\r\n          >\r\n            Users\r\n            <FaUsers className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/suppliers\"\r\n          >\r\n            Suppliers\r\n            <FaUserSecret className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n          <Link\r\n            className=\"mr-5 hover:text-gray-900 inline-flex items-center\"\r\n            to=\"/admin/reports\"\r\n          >\r\n            Reports\r\n            <HiOutlineDocumentReport className=\"mx-1\" color=\"blue\" />\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AdminNavs;\r\n","import React, { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport AdminNavs from \"../../components/Admin/AdminNavs\";\r\nimport { OrderDeliveredDelete, OrdersList } from \"../../actions/orderAction\";\r\n\r\nconst AdminOrderList = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, orders } = useSelector((state) => state.orderList);\r\n  const { success, loading: DeleteLoading } = useSelector(\r\n    (state) => state.orderDelete\r\n  );\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"This may help you in future\")) {\r\n      dispatch(OrderDeliveredDelete(id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.isAdmin) {\r\n      dispatch(OrdersList());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, user, success]);\r\n\r\n  return (\r\n    <>\r\n      <AdminNavs />\r\n\r\n      <header aria-label=\"Page Header\" className=\"bg-gray-50\">\r\n        <div className=\"mx-auto max-w-screen-xl px-4 py-8 sm:px-6 lg:px-8\">\r\n          <div className=\"mt-8 pb-10\">\r\n            <h1 className=\"text-2xl font-bold text-gray-900 sm:text-3xl\">\r\n              All your orders\r\n            </h1>\r\n\r\n            <p className=\"mt-1.5 text-sm text-gray-500\">\r\n              Search Products, Delete Products, Edit Products Keep it up! 🚀\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"bg-gray-50\">\r\n        <div className=\"container  px-5 py-10 mx-auto \">\r\n          {loading ? (\r\n            <p>loading...</p>\r\n          ) : error ? (\r\n            toast.error(`${error}`)\r\n          ) : (\r\n            <table className=\"min-w-full divide-y divide-gray-200 text-sm\">\r\n              <thead className=\"bg-gray-200\">\r\n                <tr>\r\n                  <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\r\n                    {\" \"}\r\n                    ID{\" \"}\r\n                  </th>\r\n                  <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\r\n                    {\" \"}\r\n                    USER{\" \"}\r\n                  </th>\r\n                  <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\r\n                    {\" \"}\r\n                    DATE{\" \"}\r\n                  </th>\r\n                  <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\r\n                    {\" \"}\r\n                    Total{\" \"}\r\n                  </th>\r\n                  <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\r\n                    {\" \"}\r\n                    PAID{\" \"}\r\n                  </th>\r\n                  <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\">\r\n                    {\" \"}\r\n                    DELIVERED{\" \"}\r\n                  </th>\r\n                  <th className=\"whitespace-nowrap px-4 py-2 text-left font-medium text-gray-900\"></th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody className=\"divide-y divide-gray-200\">\r\n                {orders.length === 0 ? (\r\n                  <p>No orders</p>\r\n                ) : (\r\n                  orders.map((x) => (\r\n                    <>\r\n                      <tr key={x._id}>\r\n                        {x.reported ? (\r\n                          <td className=\"whitespace-nowrap px-4 py-2 font-medium text-red-900\">\r\n                            {x._id} Reported\r\n                          </td>\r\n                        ) : (\r\n                          <td>{x._id}</td>\r\n                        )}\r\n\r\n                        {/* className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\" */}\r\n                        <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\r\n                          {x.user && x.user.name}\r\n                        </td>\r\n                        <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\r\n                          {x.createdAt.substring(0, 10)}\r\n                        </td>\r\n                        <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\r\n                          PKR{x.totalPrice}\r\n                        </td>\r\n                        <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\r\n                          {x.isPaid ? x.PaidAt : <p> X</p>}\r\n                        </td>\r\n                        <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\r\n                          {x.isDelivered ? (\r\n                            x.deliveredAt.substring(0, 10)\r\n                          ) : (\r\n                            <p> X</p>\r\n                          )}\r\n                        </td>\r\n                        <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\r\n                          <Link to={`/admin/order/${x._id}`}>\r\n                            <button classNameName=\"btn btn-primary\">\r\n                              {\" \"}\r\n                              Details{\" \"}\r\n                            </button>\r\n                          </Link>\r\n                        </td>\r\n                        {x.isDelivered && (\r\n                          <>\r\n                            <td className=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900\">\r\n                              <button\r\n                                classNameName=\"btn btn-primary\"\r\n                                onClick={() => deleteHandler(x._id)}\r\n                              >\r\n                                Delete{\" \"}\r\n                              </button>\r\n                            </td>\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    </>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminOrderList;\r\n"],"names":["addToCart","id","qty","userId","dispatch","getstate","axios","API","data","type","payload","product","_id","name","price","countInStock","images","localStorage","setItem","JSON","stringify","cart","cartItems","removeCart","removeItem","saveShippingAddress","savePaymentMethod","createOrder","order","getState","user","config","headers","authtoken","token","response","message","getOrderDetails","confirmOrder","orderId","myOrders","email","OrdersList","OrderDelivered","OrderDeliveredDelete","myOrdersDelete","className","to","color","history","useDispatch","useSelector","state","orderList","loading","error","orders","orderDelete","success","useEffect","isAdmin","push","toast","length","map","x","reported","createdAt","substring","totalPrice","isPaid","PaidAt","isDelivered","deliveredAt","classNameName","onClick","window","confirm"],"sourceRoot":""}