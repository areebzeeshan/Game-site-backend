{"version":3,"file":"static/js/144.2f3bb553.chunk.js","mappings":"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","sources":["actions/userActions.js","components/SEO.jsx","screens/Auth/Updates.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API } from \"../config/API\";\r\n\r\n\r\n//  we may pass out here profile as id for getting login user profile\r\nexport const getUserDetail = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'user_details_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/users/${id}`, config);\r\n        dispatch({ type: 'user_details_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'user_details_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//  update user profile\r\nexport const userUdpateProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'user_udpate_profile_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        const { data } = await axios.put(`${API}/users/profile`, user, config);\r\n        dispatch({ type: 'user_udpate_profile_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'user_udpate_profile_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//  list users\r\nexport const usersList = (keyword = '') => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'user_list_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/users/?keyword=${keyword}`, config);\r\n        dispatch({ type: 'user_list_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'user_list_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//  delete users\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'user_delete_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                // \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        await axios.delete(`${API}/users/${id}`, config);\r\n        dispatch({ type: 'user_delete_success' });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'user_delete_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//  delete users\r\nexport const updateUser = (user_for_update) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'user_update_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        const { data } = await axios.put(`${API}/users/${user_for_update._id}`, user_for_update, config);\r\n        dispatch({ type: 'user_update_success' });\r\n        dispatch({ type: 'user_details_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'user_update_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//  delete users\r\nexport const UserDetailAdmin = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: 'user_admin_detail_request' });\r\n\r\n        const { user } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authtoken: user.token ? `${user.token}` : \"\"\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/users/${id}`, config);\r\n        dispatch({ type: 'user_admin_detail_success', payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: 'user_admin_detail_fail',\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst SEO = ({title}) => {\r\n    return (\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <meta name=\"robots\" content=\"noindex, follow\" />\r\n            <meta name=\"description\" content=\"Syed Hadi Raza  â€“ Ecommerce Project\" />\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n        </Helmet>\r\n    )\r\n}\r\nexport default SEO","import { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import AdminNav from '../components/AdminNav';\r\nimport { updateUser } from \"../../actions/userActions\";\r\n\r\n// icons\r\nimport { MdOutlineTipsAndUpdates } from \"react-icons/md\";\r\nimport SEO from \"../../components/SEO\";\r\n\r\nconst Updates = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const user = useSelector((state) => state.user);\r\n  const { loading: loadingUpdate, success: successUpdate } = useSelector(\r\n    (state) => state.userUpdate\r\n  );\r\n  const [isShow, setisShow] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    await auth.currentUser\r\n      .updatePassword(password)\r\n      .then(() => {\r\n        setLoading(false);\r\n        setPassword(\"\");\r\n        toast.success(\"Password updated\");\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n\r\n  const handleName = (e) => {\r\n    e.preventDefault();\r\n    if (name.length < 3) {\r\n      toast.error(\"Name should be greater then 3 charactors\");\r\n    } else if (name.length >= 10) {\r\n      toast.error(\"Name should be less then 10 charactors\");\r\n    } else {\r\n      dispatch(\r\n        updateUser({\r\n          name,\r\n          email: user.email,\r\n          isAdmin: user.isAdmin,\r\n          _id: user._id,\r\n        })\r\n      );\r\n      if (!loading && successUpdate) {\r\n        toast.success(`Name Updated ${name}`);\r\n        setName(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <SEO title={\"updates\"}  />\r\n    <section className=\"text-gray-600 body-font relative\">\r\n      <div className=\"container px-5 py-10 mx-auto\">\r\n        <div className=\"flex flex-col items-center w-full mb-12\">\r\n          <h1 class=\"sm:text-3xl text-2xl  inline-flex  items-center font-medium title-font mb-4 text-gray-700\">\r\n            Updates <MdOutlineTipsAndUpdates className=\"mx-1\" color=\"blue\" />{\" \"}\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"lg:w-1/2 md:w-2/3 mx-auto\">\r\n          <div className=\"flex flex-wrap -m-2\">\r\n            <div className=\"p-2 w-full\">\r\n              <div className=\"relative\">\r\n                <label for=\"name\" className=\"leading-7 text-sm text-gray-600\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder=\"Enter new Name\"\r\n                  value={name}\r\n                  autoFocus\r\n                  className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\" p-2 w-full\" onClick={handleSubmit}>\r\n              <button\r\n                disabled={!name || name.length < 4 || loadingUpdate}\r\n                onClick={handleName}\r\n                className=\"flex mx-auto text-white   bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg\"\r\n              >\r\n                Update Name\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"p-2  w-full\">\r\n              <div className=\"relative\">\r\n                <label for=\"name\" className=\"leading-7 text-sm text-gray-600\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Enter new password\"\r\n                  className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-indigo-500 focus:bg-white focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\" p-2 w-full\" onClick={handleSubmit}>\r\n              <button\r\n                onClick={handleSubmit}\r\n                disabled={!password || password.length < 4 || loading}\r\n                className=\"flex mx-auto text-white   bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg\"\r\n              >\r\n                Update Password\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Updates;\r\n"],"names":["usersList","keyword","dispatch","getState","type","user","config","headers","authtoken","token","axios","API","data","payload","response","message","deleteUser","id","updateUser","user_for_update","_id","title","charSet","name","content","useState","password","setPassword","setName","loading","setLoading","useSelector","state","userUpdate","loadingUpdate","successUpdate","success","useDispatch","handleSubmit","e","preventDefault","auth","then","toast","catch","err","className","class","color","for","onChange","target","value","placeholder","autoFocus","onClick","disabled","length","email","isAdmin"],"sourceRoot":""}